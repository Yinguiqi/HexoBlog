<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的blender入门1</title>
    <link href="/2024/03/10/%E6%88%91%E7%9A%84blender%E5%85%A5%E9%97%A81/"/>
    <url>/2024/03/10/%E6%88%91%E7%9A%84blender%E5%85%A5%E9%97%A81/</url>
    
    <content type="html"><![CDATA[<h1 id="我的blender入门1"><a href="#我的blender入门1" class="headerlink" title="我的blender入门1"></a>我的blender入门1</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>说是入门，其实也就简单学习了两天，跟着视频做了一个小模型。</p><p>blender在steam下载就可以，免费的。<br>教程的话去b站搜一下就好啦，不会像java一样有所保留，让你关注公众号什么的。<br><a href="https://www.bilibili.com/video/BV1zh411Y7LX">【合集8.21已更新93话】Blender 2.9-3.4黑铁骑士Ⅱ系统零基础入门教程(持续更新+中文字幕+普通话+不敷衍+义务教育+案例+学习)_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV14u41147YH/">【Kurt】Blender零基础入门教程 | Blender中文区新手必刷教程(已完结)_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1aD4y1F7ZZ/">【Blender萌新教程】书本建模教程，一起来打造你的资产库_哔哩哔哩_bilibili</a></p><p><img src="/../img/mgf1.png" alt="图片" title="建模"></p><p><img src="/../img/mgf2.png" alt="图片" title="建模"></p><p>一些没用的笔记：</p><p>记得把blend文件放到资产库文件里面才行，要不然就一直在当前文件里了<br>为什么把书本外壳和纸张分开存为资产后纸张不见了是因为关联的变了，所以要存就一起<br>修改器全部应用就相当于保存修改了，所以要另外复制一份<br>很多快捷键用不了了不知道为什么，贴吧老哥解决了这个问题，按Ctrl+J的同时，鼠标要放在物体上才行!<br>当uv一面只有一个线时，选块面投影就行</p><h2 id="一些闲话"><a href="#一些闲话" class="headerlink" title="一些闲话"></a>一些闲话</h2><p>在GitHub上我新建了一个VRbook的仓库，打算建模出我看过的书籍，但后来因为很多书在互联网上都没有封面图片就只能作罢。<br>说是VRbook，其实我本来打算建模后放到VR里去看，因为我有一个Oculus Quest 2。我很喜欢Virtual Desktop待机场景的那个有窗户的房间，感觉坐在那里看着窗外的车流涌动，就好像那里真的是我的房间一样。<br>用VR能把很多这辈子也不能看到的场景让你身临其境的去感受，它能做到这一点就已经很棒了，所以等找到工作了我也可能再去学习建模、虚幻引擎什么的。我希望能创造一些有趣的场景。</p>]]></content>
    
    
    <categories>
      
      <category>blender</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blender</tag>
      
      <tag>VR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MD5加密类</title>
    <link href="/2024/03/09/MD5%E5%8A%A0%E5%AF%86%E7%B1%BB/"/>
    <url>/2024/03/09/MD5%E5%8A%A0%E5%AF%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MD5</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">getMd5</span><span class="hljs-params">(String str)</span> &#123;<br><span class="hljs-comment">// 16进制数组</span><br><span class="hljs-type">char</span> hexDigits[] = &#123; <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span> &#125;;<br><br><span class="hljs-type">char</span> strchar[];<br><span class="hljs-comment">// 将传入的字符串转换为byte数组</span><br><span class="hljs-type">byte</span> strbyte[];<br>strbyte = str.getBytes();<br><span class="hljs-comment">// 获取MD5加密对象</span><br>MessageDigest instance;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 获取加密对象</span><br>instance = MessageDigest.getInstance(<span class="hljs-string">&quot;MD5&quot;</span>);<br><span class="hljs-comment">// 传入加密需要的byte数据</span><br>instance.update(strbyte);<br><span class="hljs-comment">// 获取加密后的数组</span><br><span class="hljs-type">byte</span>[] digest = instance.digest();<br><span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> digest.length;<br><span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>strchar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[j * <span class="hljs-number">2</span>];<br><span class="hljs-comment">// 将数组做位移</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; j; i++) &#123;<br><span class="hljs-type">byte</span> <span class="hljs-variable">byte0</span> <span class="hljs-operator">=</span> digest[i];<br>strchar[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">0xf</span>];<br>strchar[k++] = hexDigits[byte0 &amp; <span class="hljs-number">0xf</span>];<br>&#125;<br><span class="hljs-comment">//转换为String</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(strchar);<br><br>&#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>e.printStackTrace();<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.out.println(MD5.getMd5(<span class="hljs-string">&quot;Milkyaw&quot;</span>));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MD5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DES加密数据库账号密码</title>
    <link href="/2024/03/08/DES%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <url>/2024/03/08/DES%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="DES加密数据库账号密码"><a href="#DES加密数据库账号密码" class="headerlink" title="DES加密数据库账号密码"></a>DES加密数据库账号密码</h1><p>实现对连接数据库账号密码的加密</p><p>DESUtil：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SuppressWarnings(&quot;restriction&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DESUtil</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Key key;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String KEY_ETR=<span class="hljs-string">&quot;mykey&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String CHARSETNAME=<span class="hljs-string">&quot;utf-8&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String ALGORITHM=<span class="hljs-string">&quot;DES&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String OFWAY=<span class="hljs-string">&quot;SHA1PRNG&quot;</span>;<br><span class="hljs-keyword">static</span>&#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">//生成DES算法</span><br>KeyGenerator generator=KeyGenerator.getInstance(ALGORITHM);<br><span class="hljs-comment">//运行SHA1安全策略</span><br>    SecureRandom secureRandom=SecureRandom.getInstance(OFWAY);<br>    <span class="hljs-comment">//设置秘钥种子</span><br>    secureRandom.setSeed(KEY_ETR.getBytes());<br>    <span class="hljs-comment">//初始化基于SHA1秘钥算法对象</span><br>    generator.init(secureRandom);<br>    <span class="hljs-comment">//生成秘钥对象</span><br>    key=generator.generateKey();<br>    generator=<span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-comment">// TODO Auto-generated catch block</span><br>e.printStackTrace();<br>&#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 加密信息(在main函数中跑出来，放在jdbc连接字段，调用getDecryptString去解析加密字段)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> str</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getEncryptString</span><span class="hljs-params">(String str)</span>&#123;<br><span class="hljs-comment">// 基于BASE64编码，接收byte[]并转换成String</span><br>BASE64Encoder base64Encoder=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BASE64Encoder</span>();<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">//按照utf-8编码</span><br><span class="hljs-type">byte</span>[] bytes = str.getBytes(CHARSETNAME);<br><span class="hljs-comment">//获取加密后的对象</span><br>Cipher cipher=Cipher.getInstance(ALGORITHM);<br><span class="hljs-comment">//初始化密码信息</span><br>cipher.init(Cipher.ENCRYPT_MODE, key);<br><span class="hljs-comment">//加密</span><br><span class="hljs-type">byte</span>[] doFinal = cipher.doFinal(bytes);<br><span class="hljs-comment">//将加密后的字节，encode成string并且返回</span><br><span class="hljs-keyword">return</span> base64Encoder.encode(doFinal);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-comment">// TODO Auto-generated catch block</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取解密后信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> str</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDecryptString</span><span class="hljs-params">(String str)</span>&#123;<br><br>BASE64Decoder base64Decoder=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BASE64Decoder</span>();<br><span class="hljs-keyword">try</span>&#123;<br><span class="hljs-comment">//将字符串decode成byte[]</span><br><span class="hljs-type">byte</span>[] decodeBuffer = base64Decoder.decodeBuffer(str);<br><span class="hljs-comment">//获取解密对象</span><br>Cipher cipher=Cipher.getInstance(ALGORITHM);<br>cipher.init(Cipher.DECRYPT_MODE, key);<br><span class="hljs-comment">//解密</span><br><span class="hljs-type">byte</span>[] doFinal = cipher.doFinal(decodeBuffer);<br><span class="hljs-comment">//返回解密后的信息</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(doFinal, CHARSETNAME);<br>&#125;<span class="hljs-keyword">catch</span>(Exception e)&#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span>&#123;<br><span class="hljs-type">String</span> <span class="hljs-variable">encryptString1</span> <span class="hljs-operator">=</span> getEncryptString(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">encryptString2</span> <span class="hljs-operator">=</span> getEncryptString(<span class="hljs-string">&quot;123456&quot;</span>);<br>System.out.println(encryptString1);<br>System.out.println(encryptString2);<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>EncryptPropertyPlaceholderConfigurer：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EncryptPropertyPlaceholderConfigurer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PropertyPlaceholderConfigurer</span>&#123;<br><br>   <span class="hljs-comment">//设置加密的字段数组</span><br>   <span class="hljs-keyword">private</span> String encryptPropertyNames[]=&#123;<span class="hljs-string">&quot;jdbc.username&quot;</span>,<span class="hljs-string">&quot;jdbc.password&quot;</span>&#125;;<br>   <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 获取解密后的数据(转换)</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">protected</span> String <span class="hljs-title function_">convertProperty</span><span class="hljs-params">(String propertyName, String propertyValue)</span> &#123;<br>      <span class="hljs-keyword">if</span>(isEncryptProp(propertyName))&#123;<br>         propertyValue=DESUtil.getDecryptString(propertyValue);<br>         <span class="hljs-keyword">return</span> propertyValue;<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>         <span class="hljs-keyword">return</span> propertyValue;<br>      &#125;<br>   &#125;<br>   <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 判断该字段是否已经加密</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEncryptProp</span><span class="hljs-params">(String propertyName)</span> &#123;<br>      <span class="hljs-keyword">for</span> (String encryptPropertyName : encryptPropertyNames) &#123;<br>         <span class="hljs-keyword">if</span>(encryptPropertyName.equals(propertyName))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>         &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
      <tag>DES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>根据mapper逆向得到数据库结构1</title>
    <link href="/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/"/>
    <url>/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/</url>
    
    <content type="html"><![CDATA[<h1 id="根据mapper逆向得到数据库结构1"><a href="#根据mapper逆向得到数据库结构1" class="headerlink" title="根据mapper逆向得到数据库结构1"></a>根据mapper逆向得到数据库结构1</h1><p>在GitHub里寻找项目时碰到的一个<strong>SDIMS进销存管理系统</strong>，fork后发现数据库没上传，那就只能根据mapper逆向得到数据库结构了，其实这种事应该是有脚本的，没有的话也是应该来一个人写一个的。</p><p>直接看mapper，一般一个xml就是对一个表的增删查改。如果有resultMap就更好了，直接粘贴复制下来去问chatgpt。</p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Repository&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;RepositoryMap&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;code&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;address&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;address&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_desc&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoDesc&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;updater&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updater&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;update_time&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updateTime&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!-- 外键 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employee&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Employee&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employeeId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;be_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">association</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sd_base_repo (<br>    repo_id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>    name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    code <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    address <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    repo_desc <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    updater <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    update_time <span class="hljs-type">TIMESTAMP</span>,<br>    employee_id <span class="hljs-type">INT</span>,<br>    <span class="hljs-keyword">FOREIGN</span> KEY (employee_id) <span class="hljs-keyword">REFERENCES</span> sd_base_employee(employee_id)<br>);<br></code></pre></td></tr></table></figure><p>记得把外键所需要的表先创建好。主键看情况做自增。</p>]]></content>
    
    
    <categories>
      
      <category>sql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客搭建流程</title>
    <link href="/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建流程"><a href="#Hexo博客搭建流程" class="headerlink" title="Hexo博客搭建流程"></a>Hexo博客搭建流程</h1><h2 id="视频版"><a href="#视频版" class="headerlink" title="视频版"></a>视频版</h2><p><a href="https://www.bilibili.com/video/BV1Hv421r7SG/">Git + Gitee + Hexo 搭建个人博客_哔哩哔哩_bilibili</a></p><h2 id="程序员文字版"><a href="#程序员文字版" class="headerlink" title="程序员文字版"></a>程序员文字版</h2><h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><p>视频时长总计一个小时，我简单总结一下，到时候有问题再看视频或者问你身边的程序员。</p><ol><li><p>首先安装git和node.Js，我一直都有就没装，不会请百度或看视频</p></li><li><p>找个位置新建文件夹，右键点击git bash，输入npm install -g hexo后回车，出错了就按方向键的上键，再次执行，大概率是网络问题</p></li><li><p>git config –global http.postBuffer 524288000 将git网络传输设大</p></li><li><p>然后hexo init 初始化<br>hexo g 生产静态页面<br>hexo s 启动本地服务</p></li><li><p>找一个主题，比如视频里面的fluid，<a href="https://github.com/fluid-dev/hexo-theme-fluid">GitHub - fluid-dev&#x2F;hexo-theme-fluid: :ocean: 一款 Material Design 风格的 Hexo 主题 &#x2F; An elegant Material-Design theme for Hexo</a>下载到文件夹里的theme目录，剩下的其实在这个项目的readme里有，我简单说</p></li><li><p>把5的文件名修改成fluid，然后如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li><li><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 config.yml 内容复制进去</p></li><li><p>然后hexo clean&#x2F;hexo g&#x2F;hexo s三联</p></li><li><p><code>config.xml</code>是主配置文件-框架配置文件<code>_config.fluid.yml</code>是主题配置文件，优先级高于上面这个，所以大概是要改配置先改主题的</p></li><li><p>如果8成功的话，你就可以在终端给你的URL打开网站了</p></li></ol><h3 id="上传GitHub"><a href="#上传GitHub" class="headerlink" title="上传GitHub"></a>上传GitHub</h3><p>上传到GitHub最重要的是你可以随时随地访问你的博客了，而不是打开电脑hexo s启动本地服务才能访问。</p><ol><li>新建仓库，然后把ssh放到_config.yml里,改成这样</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:yourName/yourProjectName.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>(记得修改)(注意这里的分支是master)</p><ol start="2"><li>安装部署插件npm install –save hexo-deployer-git</li><li>然后去github上操作一番，主要是那个setting里的pages（保存master分支就行），然后hexo clean&#x2F;hexo g&#x2F;hexo d三联</li><li>在pages页面有URL访问路径</li></ol><h3 id="修改博客域名"><a href="#修改博客域名" class="headerlink" title="修改博客域名"></a>修改博客域名</h3><p>看这个大佬的就好，很简单<a href="https://blog.csdn.net/qq_43645530/article/details/104134069">https://blog.csdn.net/qq_43645530/article/details/104134069</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>剩下的比如上传文章，修改样式什么的我也在摸索，攒到下一个文章再发，还请收藏本博客</p>]]></content>
    
    
    <categories>
      
      <category>hexo入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
