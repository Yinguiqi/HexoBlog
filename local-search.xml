<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>根据mapper逆向得到数据库结构1</title>
    <link href="/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/"/>
    <url>/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/</url>
    
    <content type="html"><![CDATA[<h1 id="根据mapper逆向得到数据库结构1"><a href="#根据mapper逆向得到数据库结构1" class="headerlink" title="根据mapper逆向得到数据库结构1"></a>根据mapper逆向得到数据库结构1</h1><p>在GitHub里寻找项目时碰到的一个<strong>SDIMS进销存管理系统</strong>，fork后发现数据库没上传，那就只能根据mapper逆向得到数据库结构了，其实这种事应该是有脚本的，没有的话也是应该来一个人写一个的。</p><p>直接看mapper，一般一个xml就是对一个表的增删查改。如果有resultMap就更好了，直接粘贴复制下来去问chatgpt。</p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Repository&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;RepositoryMap&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;code&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;address&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;address&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_desc&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoDesc&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;updater&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updater&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;update_time&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updateTime&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!-- 外键 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employee&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Employee&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employeeId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;be_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">association</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sd_base_repo (<br>    repo_id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>    name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    code <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    address <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    repo_desc <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    updater <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    update_time <span class="hljs-type">TIMESTAMP</span>,<br>    employee_id <span class="hljs-type">INT</span>,<br>    <span class="hljs-keyword">FOREIGN</span> KEY (employee_id) <span class="hljs-keyword">REFERENCES</span> sd_base_employee(employee_id)<br>);<br></code></pre></td></tr></table></figure><p>记得把外键所需要的表先创建好。主键看情况做自增。</p>]]></content>
    
    
    <categories>
      
      <category>sql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客搭建流程</title>
    <link href="/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建流程"><a href="#Hexo博客搭建流程" class="headerlink" title="Hexo博客搭建流程"></a>Hexo博客搭建流程</h1><h2 id="视频版"><a href="#视频版" class="headerlink" title="视频版"></a>视频版</h2><p><a href="https://www.bilibili.com/video/BV1Hv421r7SG/">Git + Gitee + Hexo 搭建个人博客_哔哩哔哩_bilibili</a></p><h2 id="程序员文字版"><a href="#程序员文字版" class="headerlink" title="程序员文字版"></a>程序员文字版</h2><h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><p>视频时长总计一个小时，我简单总结一下，到时候有问题再看视频或者问你身边的程序员。</p><ol><li><p>首先安装git和node.Js，我一直都有就没装，不会请百度或看视频</p></li><li><p>找个位置新建文件夹，右键点击git bash，输入npm install -g hexo后回车，出错了就按方向键的上键，再次执行，大概率是网络问题</p></li><li><p>git config –global http.postBuffer 524288000 将git网络传输设大</p></li><li><p>然后hexo init 初始化<br>hexo g 生产静态页面<br>hexo s 启动本地服务</p></li><li><p>找一个主题，比如视频里面的fluid，<a href="https://github.com/fluid-dev/hexo-theme-fluid">GitHub - fluid-dev&#x2F;hexo-theme-fluid: :ocean: 一款 Material Design 风格的 Hexo 主题 &#x2F; An elegant Material-Design theme for Hexo</a>下载到文件夹里的theme目录，剩下的其实在这个项目的readme里有，我简单说</p></li><li><p>把5的文件名修改成fluid，然后如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li><li><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 config.yml 内容复制进去</p></li><li><p>然后hexo clean&#x2F;hexo g&#x2F;hexo s三联</p></li><li><p><code>config.xml</code>是主配置文件-框架配置文件<code>_config.fluid.yml</code>是主题配置文件，优先级高于上面这个，所以大概是要改配置先改主题的</p></li><li><p>如果8成功的话，你就可以在终端给你的URL打开网站了</p></li></ol><h3 id="上传GitHub"><a href="#上传GitHub" class="headerlink" title="上传GitHub"></a>上传GitHub</h3><p>上传到GitHub最重要的是你可以随时随地访问你的博客了，而不是打开电脑hexo s启动本地服务才能访问。</p><ol><li>新建仓库，然后把ssh放到_config.yml里,改成这样</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:yourName/yourProjectName.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>(记得修改)(注意这里的分支是master)</p><ol start="2"><li>安装部署插件npm install –save hexo-deployer-git</li><li>然后去github上操作一番，主要是那个setting里的pages（保存master分支就行），然后hexo clean&#x2F;hexo g&#x2F;hexo d三联</li><li>在pages页面有URL访问路径</li></ol><h3 id="修改博客域名"><a href="#修改博客域名" class="headerlink" title="修改博客域名"></a>修改博客域名</h3><p>看这个大佬的就好，很简单<a href="https://blog.csdn.net/qq_43645530/article/details/104134069">https://blog.csdn.net/qq_43645530/article/details/104134069</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>剩下的比如上传文章，修改样式什么的我也在摸索，攒到下一个文章再发，还请收藏本博客</p>]]></content>
    
    
    <categories>
      
      <category>hexo入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
