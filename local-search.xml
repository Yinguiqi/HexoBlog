<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Alist使用尝试</title>
    <link href="/2024/03/16/Alist%E4%BD%BF%E7%94%A8%E5%B0%9D%E8%AF%95/"/>
    <url>/2024/03/16/Alist%E4%BD%BF%E7%94%A8%E5%B0%9D%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Alist使用尝试"><a href="#Alist使用尝试" class="headerlink" title="Alist使用尝试"></a>Alist使用尝试</h1><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>Alist是一个支持多种存储的文件列表程序。</p><p>也就是说在一个地方操作你的所有网盘的东西。</p><p><a href="https://github.com/alist-org/alist%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E8%A7%A3%E5%8E%8B%E5%90%8E%E8%BF%9B%E5%85%A5%E7%BB%88%E7%AB%AF%EF%BC%8Calist">https://github.com/alist-org/alist下载安装包，解压后进入终端，alist</a> admin，然后根据提示设置密码。然后alist start就可以在浏览器5244端口打开。</p><p>把终端关了以后这个进程就结束了好像，再alist start显示已经运行中，但还是打不开网页。这里可以用alist server（虽然我看教程视频一开始就用的这个）如果终端关系长时间后进程会自动结束，所以还是使用alist start也没问题。</p><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><p>一开始打开主页是什么都没有的，去下面点管理-&gt;存储-&gt;本地存储</p><p>挂载路径就是这个程序主页的路径，后面的根文件夹路径才是本地路径</p><p>然后保存就能用了，本地的相当于一个快捷方式。</p><p>百度网盘和阿里云盘就去看<a href="https://alist.nn.ci/zh/guide/%E5%B7%A6%E8%BE%B9%E7%9A%84%E6%B7%BB%E5%8A%A0%E5%AD%98%E5%82%A8%E6%95%99%E7%A8%8B%E5%B0%B1%E5%8F%AF%E4%BB%A5%E3%80%82%EF%BC%88%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%98%AF%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98open">https://alist.nn.ci/zh/guide/左边的添加存储教程就可以。（阿里云盘是阿里云盘open</a></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>还有很多功能没探索，我应该养成备份的习惯的。</p><p>百度有2tb可以用。阿里只有100gb，但阿里快点，听说原来活动很多，现在很烂</p>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>alist</tag>
      
      <tag>网盘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koishi</title>
    <link href="/2024/03/13/Koishi/"/>
    <url>/2024/03/13/Koishi/</url>
    
    <content type="html"><![CDATA[<h1 id="Koishi"><a href="#Koishi" class="headerlink" title="Koishi"></a>Koishi</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Koishi 是一个跨平台、可扩展、高性能的跨平台聊天机器人框架。</p><p>它的名字和图标设计来源于东方 Project 中的角色 古明地恋。古明地恋是一个会做出无意识举动的角色，取这个名字既象征着聊天机器人的主题，也蕴含了开发者为之倾注的热爱。</p><p>2月自己捣鼓的，但现在再想去尝试已经完全忘记怎么弄了（等我去看看笔记</p><p>这玩意经常报一堆错误，让我感觉回到了自学java的时候，很难受</p><h2 id="使用版"><a href="#使用版" class="headerlink" title="使用版"></a>使用版</h2><p><a href="https://koishi.chat/zh-CN/%E7%9B%B4%E6%8E%A5%E6%A0%B9%E6%8D%AE%E6%95%99%E7%A8%8B%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%EF%BC%8C%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AF%9D%E5%B0%B1%E7%9C%8B%E7%BD%91%E9%A1%B5%E7%9A%84%E6%95%99%E7%A8%8B%E5%B0%B1%E8%A1%8C%E3%80%82">https://koishi.chat/zh-CN/直接根据教程下载安装软件，学习使用的话就看网页的教程就行。</a></p><p>首先需要说明的是，普通用户不能在QQ群里搭建自己的机器人，只能在QQ频道里搭建，这点直接把不玩频道的我给劝退了。想要有在QQ群搭建机器人的权限还得参加举办的机器人大赛，但不知道那是猴年马月的事了</p><h2 id="开发版"><a href="#开发版" class="headerlink" title="开发版"></a>开发版</h2><p>我一开始想做的效果是在tg频道里推送电脑文件夹的新增图片，但在上面使用版下载的软件并不能开发一个插件。</p><p>根据教程里的开发指南一步步做，然后会遇到很多问题，不要担心，去论坛找找（找不到也是常有的事</p><p>推荐不懂ts的直接用blockly插件开发，比如这样</p><p><img src="/../img/blockly.jpg" alt="图片" title="blockly搭积木"></p><p>最后经过一系列解决问题也能简单实现，但比我想要的效果相差甚远，便不了了之了</p>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Koishi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>背包乱斗</title>
    <link href="/2024/03/13/%E8%83%8C%E5%8C%85%E4%B9%B1%E6%96%97/"/>
    <url>/2024/03/13/%E8%83%8C%E5%8C%85%E4%B9%B1%E6%96%97/</url>
    
    <content type="html"><![CDATA[<h1 id="背包乱斗"><a href="#背包乱斗" class="headerlink" title="背包乱斗"></a>背包乱斗</h1><p>《背包乱斗》是一款以背包管理为核心的异步自走棋游戏，在b站看独立游戏蜥蜴君和王老菊玩就买了，很有趣。</p><p>玩了12个小时，火魔才上到钻石，大概率不会再打了。</p><p>目前只会火魔的两种套路，龙巢和提灯，火宗还不怎么会。狂战士那个斧头套路也玩了一次。</p><p>总的来说还是很有趣的。</p><p><img src="/../img/bbld.png" alt="图片" title="建模"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>game</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你想活出怎样的人生读书笔记</title>
    <link href="/2024/03/12/%E4%BD%A0%E6%83%B3%E6%B4%BB%E5%87%BA%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BA%BA%E7%94%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/03/12/%E4%BD%A0%E6%83%B3%E6%B4%BB%E5%87%BA%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BA%BA%E7%94%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="你想活出怎样的人生读书笔记"><a href="#你想活出怎样的人生读书笔记" class="headerlink" title="你想活出怎样的人生读书笔记"></a>你想活出怎样的人生读书笔记</h1><p>是书，不是电影。1930年代的一本书。</p><h2 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h2><p>一个雨天，14岁的本田润一和舅舅在东京繁华街区的楼顶，看着人来人往，心中突然产生前所未有的变化——有许多人在他看不见的地方生活着，人类就像茫茫大海中的水分子，他只是其中之一。因为没有以自我为中心思考问题，他开始被舅舅称为“小哥白尼”。</p><p>当小哥白尼开始思考时，生活中的每一件事似乎都变得不简单了：为什么大家都欺负家境不好的同学？为什么不服从前辈制定的无理规则就要被排挤？为什么约定好的事却难以付诸行动？</p><p>舅舅告诉小哥白尼，这不是他现阶段独有的困扰，贫富、歧视、欺凌、勇气……在将来的人生中，他将在不同的场合反复遇到这些重大的问题。为此，舅舅特意为小哥白尼准备了一个神奇的笔记本。</p><p>奇妙的事情真的在小哥白尼身上发生了。</p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="奇怪的经验"><a href="#奇怪的经验" class="headerlink" title="奇怪的经验"></a>奇怪的经验</h3><blockquote><p>你知道尼古拉斯·哥白尼的“地动说”吧。在他提出地动说之前，大家都只相信自己看到的，认定太阳和星星是绕着地球转。原因之一是基督教教会主张地球是宇宙的中心。其实更进一步想，<strong>人总是以自己为中心看待事物或思考事物，这是人的特性。</strong></p></blockquote><blockquote><p><strong>如果人一直坚信地球是宇宙的中心，恐怕就无法了解宇宙真正的样貌，同样地，总是以自我为中心判断事物，也会让人不了解周遭事物的真相。</strong>这种人一定看不清重大的真理。平时我们当然会说是太阳升起、落下。有关这些日常的事物，按照习惯这么说并无大碍。不过，如果想了解宇宙的重大真理，就得舍弃那样的想法。世上其他事物其实也一样。</p></blockquote><h3 id="勇敢的朋友"><a href="#勇敢的朋友" class="headerlink" title="勇敢的朋友"></a>勇敢的朋友</h3><blockquote><p>所以，最重要的是，<strong>从自己真正的感受、真切的感动出发，思考其中的涵义</strong>。当你心有所感、有什么想法从内心深处涌现时，千万不能有一丝敷衍。一定要想清楚，自己在什么情况下、对什么事情、有什么感觉。这样一来，你就会慢慢明白，自己在某个时间、某个地方受到感动，这种无法重复的唯一经验，其实具有不限于那个时刻的意义。<strong>这就是真正属于你的思想</strong>。说得艰深一点，就是时时从自己的亲身体验出发、诚实地思考；这件事情，小哥白尼！真的非常重要。如果在这方面有一丝敷衍，不管你想了、说了什么看来了不起的事情，也都是假的。</p></blockquote><blockquote><p>如果你在课堂上学到这些道德规范，觉得社会也认为这样的人了不起，所以你就只按照老师说的话行动，按照老师教的规范生活——小哥白尼，听好了——这样一来，你永远都无法成为一个完整的人。当你还小的时候，这么做就够了。可是到了你这个年纪，不能只是这样。重要的不是世俗的眼光或其他，而是你自己必须从灵魂深处了解人到底是什么地方了不起。然后，必须激发自己的向上心，打从心底想成为了不起的人。好事就是好事，坏事就是坏事，逐一判断好坏的时候，以及做你判断的好事的时候，都得贯彻从你胸中涌现的热切的情感。我并不是要模仿北见的口头禅，不过你必须有“不管谁怎么说”的决心。</p></blockquote><h3 id="牛顿的苹果与奶粉"><a href="#牛顿的苹果与奶粉" class="headerlink" title="牛顿的苹果与奶粉"></a>牛顿的苹果与奶粉</h3><blockquote><p>只要浏览一下你生活中所用的必需品，就可以发现，<strong>所有事物的背后都有数不清的人在努力工作着</strong>。然而，他们全都是你不曾见过的人。你说，你觉得怪怪的。</p></blockquote><blockquote><p>可是，小哥白尼，不必我说你也知道，人必须活得像人。人活在不像人与人之间的关系当中，实在可惜。即使面对“毫无瓜葛的陌生人”，也应该建立像人的关系。——我这么说，当然不是要你现在立刻采取什么行动。我只是希望等你渐渐长大，能开始认真注意这样的事。这是人类进步到现在的阶段还未解决的问题之一。</p></blockquote><blockquote><p>真正的人与人之间的关系是什么样的关系？——你母亲为你付出，并不求回报。为你无私地付出，你母亲就会感到快乐。你为好朋友做事的时候，同样不需任何报酬，就会很开心。人与人发自善意为彼此付出而感到喜悦，是最美好的事。而且，这就是真正的人与人之间的关系。小哥白尼，你应该也同意吧。</p></blockquote><h3 id="贫穷的朋友"><a href="#贫穷的朋友" class="headerlink" title="贫穷的朋友"></a>贫穷的朋友</h3><blockquote><p>没错。这的确是错的。既然是人，就该让所有人都过得像人。世界应该是这样的。只要有诚恳善良的心，一定会这么想。不过到目前为止，令人遗憾的是，这个世界还不是这样。虽然人类整体进步了，却还没有达到这样的境界。这都是必须留待以后解决的问题。</p></blockquote><blockquote><p>在穷苦的环境长大、只上过小学、毕业后就靠劳力赚钱维生的人当中，有很多人长大之后，知识还不如你多。几何、代数、物理这些科目到了中学之后才教，他们往往连非常简单的知识都不知道。对于事物的偏好，也多半不入流。光从这一点看来，你难免会觉得自己比那些人更高一等。不过，<strong>换个角度看，他们才是扛着这个世界的人。</strong>他们远远胜过你，是很了不起的人。——你想想看，世人生活所需的东西都是人类劳动的产物。即使是做学问、艺术这些高尚的工作所需的东西，同样都是他们付出血汗制作的。没有他们辛苦的劳动，就没有文明，世界也不会进步。</p></blockquote><blockquote><p>当然不管是谁都得吃穿，没有人完全不消费，只从事生产。而且，生产东西本来就是为了有用的消费，所以消费本身并不是件坏事。不过，为世界生产多过消费的人与完全不事生产只消费的人，相较之下，到底谁比较了不起——这么一问，听起来好像已经不成问题。如果没有人为我们生产，我们就无法品尝、享受、消费。<strong>为生产而付出的劳动让人活得像人</strong>。我说的不只是食物、衣服这些东西。即使在学问的世界、艺术的世界，创造的人也远比接受的人更重要。</p></blockquote><blockquote><p>所以，今后你千万别忘了生产者和消费者的区隔。从这个角度看，你一定会发现，神气巴拉地坐在汽车里、住豪宅的人，反而有很多是没有价值的人。你也一定会发现，被世人瞧不起的人当中，有很多都值得我们尊敬。</p></blockquote><h3 id="拿破仑和四名少年"><a href="#拿破仑和四名少年" class="headerlink" title="拿破仑和四名少年"></a>拿破仑和四名少年</h3><blockquote><p>没错，拿破仑的确是伟大的人物，是不愧英雄名号的英雄。他在青年时代从逆境奋发向上，一路攀上权势的巅峰；这段日子充满年轻活力、精采灿烂、机敏灵活，阅读他的传记总令人振奋不已。他是世界历史的王者，在全盛时期君临全欧洲，犹如太阳一般壮丽。他没落的过程也是一场壮阔的悲剧。连歌德那样的大文豪都忍不住赞叹，所以你们崇拜拿破仑也是理所当然。可是——可是，小哥白尼，你们千万不能忘记，<strong>我们赞叹拿破仑的一生是为了他过人的活动力</strong>。</p></blockquote><blockquote><p>等你长大之后慢慢就会了解，<strong>世上有许多和善之人虽有好心肠，却因为性格懦弱而无法发挥善心。有很多人并不是坏人，却因为过于懦弱，反而为自己和他人带来不幸</strong>。和人类的进步脱钩的英雄精神固然空虚，缺乏英雄气魄的善良往往也一样空虚。</p></blockquote><h3 id="下雪那一天的事-石阶的回忆"><a href="#下雪那一天的事-石阶的回忆" class="headerlink" title="下雪那一天的事-石阶的回忆"></a>下雪那一天的事-石阶的回忆</h3><blockquote><p>感到痛苦而知道身体出了问题，代表痛苦告诉我们，身体处于不正常的状态。假如身体出了问题却没有痛苦，我们也不会注意到问题，甚至可能因此丧命。实际上，就连蛀牙这种问题也一样，相较于一开始就很痛的蛀牙，那些一点也不痛但是蛀洞越来越大的蛀牙，反而容易延误治疗。所以，大家当然都希望避免身体疼痛，但是从这个角度看来，其实疼痛是有益的、必要的。——因为疼痛，我们才会发现自己的身体出了问题，同时，清楚了解人的身体本来应该处于什么状态。</p></blockquote><blockquote><p>同样地，当人不处于身为人应有的正常状态，内心才会感受到痛苦和煎熬，让我们知道出了问题。<strong>因为内心感到痛苦，我们才能在心里好好认清人本来应该是什么样子。</strong></p></blockquote><blockquote><p>没错。当自己也承认自己犯了错，会感到痛苦。所以，大多数人会找藉口，假装不承认。不过，小哥白尼，<strong>像个男子汉一样承认自己的过错并因此感到痛苦，这正是天地之间唯有人才做得到的事。</strong></p></blockquote><blockquote><p>只要是人，都会犯错。只要良心尚未麻痺，犯错的自觉必定会让我们尝到痛苦的滋味。可是，小哥白尼，<strong>我们都该从痛苦当中汲取新的自信</strong>——因为我们有能力顺从正确的道路前行，才会尝到犯错的痛苦。</p></blockquote><h3 id="凯旋-水仙芽与犍陀罗的佛像-春天的早晨"><a href="#凯旋-水仙芽与犍陀罗的佛像-春天的早晨" class="headerlink" title="凯旋-水仙芽与犍陀罗的佛像-春天的早晨"></a>凯旋-水仙芽与犍陀罗的佛像-春天的早晨</h3><blockquote><p>我真的开始觉得自己必须成为一个好人。就像舅舅所说，我是消费专家，没有生产任何东西。我和浦川不同，即使现在想生产什么，也办不到。但是我能成为一个好人。只要自己成为好人，就能为世界创造一个好人；这我也做得到。我相信，只要打定主意成为一个好人，就有能力为世界创造更多。</p></blockquote><blockquote><p>我认为将来世界上所有人都应该成为彼此的朋友。人类从以前到现在不断进步，今后一定会进步到那样的世界。而我想成为能帮助世界进步的人。</p></blockquote><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>很不错的一本儿童文学，去年八月七号看的。</p><p>如果我小时候看过这本书，也许会活得更加自信吧。</p><p>书中关于独立思考、人与人之间的关系、懦弱与勇气、痛苦与自信、应该成为一个什么样的人这些论点做出了很充分的探讨，让人记忆深刻。很喜欢其中一段<strong>什么样的人才是伟大的人——关于拿破仑的一生</strong>。</p><blockquote><p>没错，拿破仑的确是伟大的人物，是不愧英雄名号的英雄。他在青年时代从逆境奋发向上，一路攀上权势的巅峰；这段日子充满年轻活力、精采灿烂、机敏灵活，阅读他的传记总令人振奋不已。他是世界历史的王者，在全盛时期君临全欧洲，犹如太阳一般壮丽。他没落的过程也是一场壮阔的悲剧。连歌德那样的大文豪都忍不住赞叹，所以你们崇拜拿破仑也是理所当然。可是——可是，小哥白尼，你们千万不能忘记，<strong>我们赞叹拿破仑的一生是为了他过人的活动力</strong>。</p></blockquote><blockquote><p>我们真的忍不住惊叹，原来人可以发挥这么强的实行力。不，不只是惊叹，甚至感到人的坚毅不拔。正因为如此，我们阅读拿破仑传记时才会感到热血沸腾，而且至今仍有许多人热爱他的传记。——不过，实行力、活动力、过人的精力到底是什么？那应该是人类成就某件事的能力、为世界实现某种目的的能力。</p></blockquote><blockquote><p>我们固然赞叹拿破仑伟大的活动力，还是可以思考这个问题——</p></blockquote><blockquote><p>究竟拿破仑靠他过人的活动力成就了什么？</p></blockquote><blockquote><p>小哥白尼，这个问题不只适用于拿破仑，也应该用来审视任何伟人和英雄。被奉为伟人和英雄的人都不是凡人，他们有过人的能力，能完成一般人做不到的事。以过人的能力这一点来看，这些伟人英雄都有让我们甘拜下风的地方。可是，在我们甘拜下风的同时，还得大胆质疑：究竟他们靠着非凡的能力成就了什么、他们成就的非凡的事又造福了谁？毕竟，靠着非凡的能力也可能成就非凡的坏事。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>书籍</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的blender入门1</title>
    <link href="/2024/03/10/%E6%88%91%E7%9A%84blender%E5%85%A5%E9%97%A81/"/>
    <url>/2024/03/10/%E6%88%91%E7%9A%84blender%E5%85%A5%E9%97%A81/</url>
    
    <content type="html"><![CDATA[<h1 id="我的blender入门1"><a href="#我的blender入门1" class="headerlink" title="我的blender入门1"></a>我的blender入门1</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>说是入门，其实也就简单学习了两天，跟着视频做了一个小模型。</p><p>blender在steam下载就可以，免费的。<br>教程的话去b站搜一下就好啦，不会像java一样有所保留，让你关注公众号什么的。<br><a href="https://www.bilibili.com/video/BV1zh411Y7LX">【合集8.21已更新93话】Blender 2.9-3.4黑铁骑士Ⅱ系统零基础入门教程(持续更新+中文字幕+普通话+不敷衍+义务教育+案例+学习)_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV14u41147YH/">【Kurt】Blender零基础入门教程 | Blender中文区新手必刷教程(已完结)_哔哩哔哩_bilibili</a><br><a href="https://www.bilibili.com/video/BV1aD4y1F7ZZ/">【Blender萌新教程】书本建模教程，一起来打造你的资产库_哔哩哔哩_bilibili</a></p><p><img src="/../img/mgf1.png" alt="图片" title="建模"></p><p><img src="/../img/mgf2.png" alt="图片" title="建模"></p><p>一些没用的笔记：</p><p>记得把blend文件放到资产库文件里面才行，要不然就一直在当前文件里了<br>为什么把书本外壳和纸张分开存为资产后纸张不见了是因为关联的变了，所以要存就一起<br>修改器全部应用就相当于保存修改了，所以要另外复制一份<br>很多快捷键用不了了不知道为什么，贴吧老哥解决了这个问题，按Ctrl+J的同时，鼠标要放在物体上才行!<br>当uv一面只有一个线时，选块面投影就行</p><h2 id="一些闲话"><a href="#一些闲话" class="headerlink" title="一些闲话"></a>一些闲话</h2><p>在GitHub上我新建了一个VRbook的仓库，打算建模出我看过的书籍，但后来因为很多书在互联网上都没有封面图片就只能作罢。<br>说是VRbook，其实我本来打算建模后放到VR里去看，因为我有一个Oculus Quest 2。我很喜欢Virtual Desktop待机场景的那个有窗户的房间，感觉坐在那里看着窗外的车流涌动，就好像那里真的是我的房间一样。<br>用VR能把很多这辈子也不能看到的场景让你身临其境的去感受，它能做到这一点就已经很棒了，所以等找到工作了我也可能再去学习建模、虚幻引擎什么的。我希望能创造一些有趣的场景。</p>]]></content>
    
    
    <categories>
      
      <category>blender</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blender</tag>
      
      <tag>VR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MD5加密类</title>
    <link href="/2024/03/09/MD5%E5%8A%A0%E5%AF%86%E7%B1%BB/"/>
    <url>/2024/03/09/MD5%E5%8A%A0%E5%AF%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MD5</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">getMd5</span><span class="hljs-params">(String str)</span> &#123;<br><span class="hljs-comment">// 16进制数组</span><br><span class="hljs-type">char</span> hexDigits[] = &#123; <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span> &#125;;<br><br><span class="hljs-type">char</span> strchar[];<br><span class="hljs-comment">// 将传入的字符串转换为byte数组</span><br><span class="hljs-type">byte</span> strbyte[];<br>strbyte = str.getBytes();<br><span class="hljs-comment">// 获取MD5加密对象</span><br>MessageDigest instance;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 获取加密对象</span><br>instance = MessageDigest.getInstance(<span class="hljs-string">&quot;MD5&quot;</span>);<br><span class="hljs-comment">// 传入加密需要的byte数据</span><br>instance.update(strbyte);<br><span class="hljs-comment">// 获取加密后的数组</span><br><span class="hljs-type">byte</span>[] digest = instance.digest();<br><span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> digest.length;<br><span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>strchar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[j * <span class="hljs-number">2</span>];<br><span class="hljs-comment">// 将数组做位移</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; j; i++) &#123;<br><span class="hljs-type">byte</span> <span class="hljs-variable">byte0</span> <span class="hljs-operator">=</span> digest[i];<br>strchar[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">0xf</span>];<br>strchar[k++] = hexDigits[byte0 &amp; <span class="hljs-number">0xf</span>];<br>&#125;<br><span class="hljs-comment">//转换为String</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(strchar);<br><br>&#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>e.printStackTrace();<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.out.println(MD5.getMd5(<span class="hljs-string">&quot;Milkyaw&quot;</span>));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MD5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DES加密数据库账号密码</title>
    <link href="/2024/03/08/DES%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <url>/2024/03/08/DES%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="DES加密数据库账号密码"><a href="#DES加密数据库账号密码" class="headerlink" title="DES加密数据库账号密码"></a>DES加密数据库账号密码</h1><p>实现对连接数据库账号密码的加密</p><p>DESUtil：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SuppressWarnings(&quot;restriction&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DESUtil</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Key key;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String KEY_ETR=<span class="hljs-string">&quot;mykey&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String CHARSETNAME=<span class="hljs-string">&quot;utf-8&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String ALGORITHM=<span class="hljs-string">&quot;DES&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String OFWAY=<span class="hljs-string">&quot;SHA1PRNG&quot;</span>;<br><span class="hljs-keyword">static</span>&#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">//生成DES算法</span><br>KeyGenerator generator=KeyGenerator.getInstance(ALGORITHM);<br><span class="hljs-comment">//运行SHA1安全策略</span><br>    SecureRandom secureRandom=SecureRandom.getInstance(OFWAY);<br>    <span class="hljs-comment">//设置秘钥种子</span><br>    secureRandom.setSeed(KEY_ETR.getBytes());<br>    <span class="hljs-comment">//初始化基于SHA1秘钥算法对象</span><br>    generator.init(secureRandom);<br>    <span class="hljs-comment">//生成秘钥对象</span><br>    key=generator.generateKey();<br>    generator=<span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-comment">// TODO Auto-generated catch block</span><br>e.printStackTrace();<br>&#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 加密信息(在main函数中跑出来，放在jdbc连接字段，调用getDecryptString去解析加密字段)</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> str</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getEncryptString</span><span class="hljs-params">(String str)</span>&#123;<br><span class="hljs-comment">// 基于BASE64编码，接收byte[]并转换成String</span><br>BASE64Encoder base64Encoder=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BASE64Encoder</span>();<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">//按照utf-8编码</span><br><span class="hljs-type">byte</span>[] bytes = str.getBytes(CHARSETNAME);<br><span class="hljs-comment">//获取加密后的对象</span><br>Cipher cipher=Cipher.getInstance(ALGORITHM);<br><span class="hljs-comment">//初始化密码信息</span><br>cipher.init(Cipher.ENCRYPT_MODE, key);<br><span class="hljs-comment">//加密</span><br><span class="hljs-type">byte</span>[] doFinal = cipher.doFinal(bytes);<br><span class="hljs-comment">//将加密后的字节，encode成string并且返回</span><br><span class="hljs-keyword">return</span> base64Encoder.encode(doFinal);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-comment">// TODO Auto-generated catch block</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取解密后信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> str</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDecryptString</span><span class="hljs-params">(String str)</span>&#123;<br><br>BASE64Decoder base64Decoder=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BASE64Decoder</span>();<br><span class="hljs-keyword">try</span>&#123;<br><span class="hljs-comment">//将字符串decode成byte[]</span><br><span class="hljs-type">byte</span>[] decodeBuffer = base64Decoder.decodeBuffer(str);<br><span class="hljs-comment">//获取解密对象</span><br>Cipher cipher=Cipher.getInstance(ALGORITHM);<br>cipher.init(Cipher.DECRYPT_MODE, key);<br><span class="hljs-comment">//解密</span><br><span class="hljs-type">byte</span>[] doFinal = cipher.doFinal(decodeBuffer);<br><span class="hljs-comment">//返回解密后的信息</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(doFinal, CHARSETNAME);<br>&#125;<span class="hljs-keyword">catch</span>(Exception e)&#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span>&#123;<br><span class="hljs-type">String</span> <span class="hljs-variable">encryptString1</span> <span class="hljs-operator">=</span> getEncryptString(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">encryptString2</span> <span class="hljs-operator">=</span> getEncryptString(<span class="hljs-string">&quot;123456&quot;</span>);<br>System.out.println(encryptString1);<br>System.out.println(encryptString2);<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>EncryptPropertyPlaceholderConfigurer：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EncryptPropertyPlaceholderConfigurer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PropertyPlaceholderConfigurer</span>&#123;<br><br>   <span class="hljs-comment">//设置加密的字段数组</span><br>   <span class="hljs-keyword">private</span> String encryptPropertyNames[]=&#123;<span class="hljs-string">&quot;jdbc.username&quot;</span>,<span class="hljs-string">&quot;jdbc.password&quot;</span>&#125;;<br>   <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 获取解密后的数据(转换)</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">protected</span> String <span class="hljs-title function_">convertProperty</span><span class="hljs-params">(String propertyName, String propertyValue)</span> &#123;<br>      <span class="hljs-keyword">if</span>(isEncryptProp(propertyName))&#123;<br>         propertyValue=DESUtil.getDecryptString(propertyValue);<br>         <span class="hljs-keyword">return</span> propertyValue;<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>         <span class="hljs-keyword">return</span> propertyValue;<br>      &#125;<br>   &#125;<br>   <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 判断该字段是否已经加密</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEncryptProp</span><span class="hljs-params">(String propertyName)</span> &#123;<br>      <span class="hljs-keyword">for</span> (String encryptPropertyName : encryptPropertyNames) &#123;<br>         <span class="hljs-keyword">if</span>(encryptPropertyName.equals(propertyName))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>         &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>util</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
      <tag>DES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>根据mapper逆向得到数据库结构1</title>
    <link href="/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/"/>
    <url>/2024/03/08/%E6%A0%B9%E6%8D%AEmapper%E9%80%86%E5%90%91%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%841/</url>
    
    <content type="html"><![CDATA[<h1 id="根据mapper逆向得到数据库结构1"><a href="#根据mapper逆向得到数据库结构1" class="headerlink" title="根据mapper逆向得到数据库结构1"></a>根据mapper逆向得到数据库结构1</h1><p>在GitHub里寻找项目时碰到的一个<strong>SDIMS进销存管理系统</strong>，fork后发现数据库没上传，那就只能根据mapper逆向得到数据库结构了，其实这种事应该是有脚本的，没有的话也是应该来一个人写一个的。</p><p>直接看mapper，一般一个xml就是对一个表的增删查改。如果有resultMap就更好了，直接粘贴复制下来去问chatgpt。</p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Repository&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;RepositoryMap&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;code&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;address&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;address&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;repo_desc&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;repoDesc&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;updater&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updater&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;update_time&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;updateTime&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!-- 外键 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employee&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;top.lothar.sdims.entity.Employee&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;employee_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;employeeId&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;be_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;name&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">association</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sd_base_repo (<br>    repo_id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>    name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    code <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    address <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    repo_desc <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    updater <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    update_time <span class="hljs-type">TIMESTAMP</span>,<br>    employee_id <span class="hljs-type">INT</span>,<br>    <span class="hljs-keyword">FOREIGN</span> KEY (employee_id) <span class="hljs-keyword">REFERENCES</span> sd_base_employee(employee_id)<br>);<br></code></pre></td></tr></table></figure><p>记得把外键所需要的表先创建好。主键看情况做自增。</p>]]></content>
    
    
    <categories>
      
      <category>sql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客搭建流程</title>
    <link href="/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2024/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建流程"><a href="#Hexo博客搭建流程" class="headerlink" title="Hexo博客搭建流程"></a>Hexo博客搭建流程</h1><h2 id="视频版"><a href="#视频版" class="headerlink" title="视频版"></a>视频版</h2><p><a href="https://www.bilibili.com/video/BV1Hv421r7SG/">Git + Gitee + Hexo 搭建个人博客_哔哩哔哩_bilibili</a></p><h2 id="程序员文字版"><a href="#程序员文字版" class="headerlink" title="程序员文字版"></a>程序员文字版</h2><h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><p>视频时长总计一个小时，我简单总结一下，到时候有问题再看视频或者问你身边的程序员。</p><ol><li><p>首先安装git和node.Js，我一直都有就没装，不会请百度或看视频</p></li><li><p>找个位置新建文件夹，右键点击git bash，输入npm install -g hexo后回车，出错了就按方向键的上键，再次执行，大概率是网络问题</p></li><li><p>git config –global http.postBuffer 524288000 将git网络传输设大</p></li><li><p>然后hexo init 初始化<br>hexo g 生产静态页面<br>hexo s 启动本地服务</p></li><li><p>找一个主题，比如视频里面的fluid，<a href="https://github.com/fluid-dev/hexo-theme-fluid">GitHub - fluid-dev&#x2F;hexo-theme-fluid: :ocean: 一款 Material Design 风格的 Hexo 主题 &#x2F; An elegant Material-Design theme for Hexo</a>下载到文件夹里的theme目录，剩下的其实在这个项目的readme里有，我简单说</p></li><li><p>把5的文件名修改成fluid，然后如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li><li><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 config.yml 内容复制进去</p></li><li><p>然后hexo clean&#x2F;hexo g&#x2F;hexo s三联</p></li><li><p><code>config.xml</code>是主配置文件-框架配置文件<code>_config.fluid.yml</code>是主题配置文件，优先级高于上面这个，所以大概是要改配置先改主题的</p></li><li><p>如果8成功的话，你就可以在终端给你的URL打开网站了</p></li></ol><h3 id="上传GitHub"><a href="#上传GitHub" class="headerlink" title="上传GitHub"></a>上传GitHub</h3><p>上传到GitHub最重要的是你可以随时随地访问你的博客了，而不是打开电脑hexo s启动本地服务才能访问。</p><ol><li>新建仓库，然后把ssh放到_config.yml里,改成这样</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:yourName/yourProjectName.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>(记得修改)(注意这里的分支是master)</p><ol start="2"><li>安装部署插件npm install –save hexo-deployer-git</li><li>然后去github上操作一番，主要是那个setting里的pages（保存master分支就行），然后hexo clean&#x2F;hexo g&#x2F;hexo d三联</li><li>在pages页面有URL访问路径</li></ol><h3 id="修改博客域名"><a href="#修改博客域名" class="headerlink" title="修改博客域名"></a>修改博客域名</h3><p>看这个大佬的就好，很简单<a href="https://blog.csdn.net/qq_43645530/article/details/104134069">https://blog.csdn.net/qq_43645530/article/details/104134069</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>剩下的比如上传文章，修改样式什么的我也在摸索，攒到下一个文章再发，还请收藏本博客</p>]]></content>
    
    
    <categories>
      
      <category>hexo入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
